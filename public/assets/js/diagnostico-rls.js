// Script de diagn√≥stico para problemas de RLS (Row Level Security)
// Execute no console do navegador ap√≥s fazer login

async function diagnosticarProblemaRLS() {
    console.log('üîç Iniciando diagn√≥stico de problemas RLS...');
    
    try {
        // Teste 1: Verificar conex√£o b√°sica
        console.log('\n1Ô∏è‚É£ Testando conex√£o b√°sica...');
        const { data: testConnection, error: errorConnection } = await supabase
            .from('blocos')
            .select('count(*)')
            .limit(1);
        
        if (errorConnection) {
            console.error('‚ùå Erro na conex√£o:', errorConnection);
            return;
        }
        console.log('‚úÖ Conex√£o funcionando');
        
        // Teste 2: Tentar ler equipamentos
        console.log('\n2Ô∏è‚É£ Testando leitura de equipamentos...');
        const { data: equipamentos, error: errorRead } = await supabase
            .from('equipamentos')
            .select('*')
            .limit(5);
        
        if (errorRead) {
            console.error('‚ùå Erro ao ler equipamentos:', errorRead);
        } else {
            console.log('‚úÖ Leitura funcionando, equipamentos encontrados:', equipamentos.length);
        }
        
        // Teste 3: Tentar inserir equipamento simples
        console.log('\n3Ô∏è‚É£ Testando inser√ß√£o simples...');
        const equipamentoTeste = {
            nome: 'Teste Diagn√≥stico',
            patrimonio: `DIAG-${Date.now()}`,
            bloco_id: 1, // Assumindo que existe bloco com ID 1
            local: 'Teste',
            status: 'disponivel',
            ativo: true
        };
        
        console.log('üìã Dados para inser√ß√£o:', equipamentoTeste);
        
        const { data: insertResult, error: errorInsert } = await supabase
            .from('equipamentos')
            .insert([equipamentoTeste])
            .select();
        
        if (errorInsert) {
            console.error('‚ùå Erro na inser√ß√£o:', errorInsert);
            console.log('üîç C√≥digo do erro:', errorInsert.code);
            console.log('üîç Mensagem:', errorInsert.message);
            console.log('üîç Detalhes:', errorInsert.details);
            
            // An√°lise espec√≠fica do erro
            if (errorInsert.code === '42501') {
                console.log('üö® PROBLEMA: Erro de permiss√£o (42501)');
                console.log('üí° SOLU√á√ÉO: Execute o script fix_rls_equipamentos.sql no Supabase');
            } else if (errorInsert.message.includes('row-level security')) {
                console.log('üö® PROBLEMA: Row Level Security bloqueando inser√ß√£o');
                console.log('üí° SOLU√á√ÉO: Desabilite RLS ou crie pol√≠ticas adequadas');
            }
        } else {
            console.log('‚úÖ Inser√ß√£o funcionando! Equipamento criado:', insertResult[0]);
            
            // Limpar o teste
            const { error: errorDelete } = await supabase
                .from('equipamentos')
                .delete()
                .eq('id', insertResult[0].id);
            
            if (errorDelete) {
                console.warn('‚ö†Ô∏è N√£o foi poss√≠vel deletar o equipamento de teste');
            } else {
                console.log('üßπ Equipamento de teste removido');
            }
        }
        
        // Teste 4: Verificar estrutura da tabela
        console.log('\n4Ô∏è‚É£ Verificando informa√ß√µes da tabela...');
        const { data: tableInfo, error: errorTable } = await supabase
            .rpc('get_table_info', { table_name: 'equipamentos' })
            .catch(() => null);
        
        if (tableInfo) {
            console.log('üìä Informa√ß√µes da tabela:', tableInfo);
        } else {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel obter informa√ß√µes da tabela');
        }
        
        console.log('\nüèÅ Diagn√≥stico conclu√≠do!');
        
    } catch (error) {
        console.error('üí• Erro durante diagn√≥stico:', error);
    }
}

// Teste espec√≠fico para RLS
async function testarRLS() {
    console.log('üîí Testando pol√≠ticas RLS...');
    
    // Query para verificar RLS
    const query = `
        SELECT 
            schemaname, 
            tablename, 
            rowsecurity as rls_enabled
        FROM pg_tables 
        WHERE tablename = 'equipamentos';
    `;
    
    try {
        const { data, error } = await supabase.rpc('exec_sql', { query });
        if (error) {
            console.error('‚ùå Erro ao verificar RLS:', error);
        } else {
            console.log('üìã Status RLS:', data);
        }
    } catch (error) {
        console.log('‚ö†Ô∏è N√£o foi poss√≠vel verificar RLS diretamente');
    }
}

// Script de solu√ß√£o r√°pida
async function solucionarRapida() {
    console.log('üöÄ Tentando solu√ß√£o r√°pida...');
    
    try {
        // Tentar inser√ß√£o com dados m√≠nimos
        const { data, error } = await supabase
            .from('equipamentos')
            .insert({
                nome: 'Equipamento Teste R√°pido',
                patrimonio: `QUICK-${Date.now()}`,
                bloco_id: 1,
                local: 'Teste R√°pido'
            })
            .select();
        
        if (error) {
            console.error('‚ùå Solu√ß√£o r√°pida falhou:', error);
            console.log('\nüìã INSTRU√á√ïES PARA CORRIGIR:');
            console.log('1. Acesse o Supabase Dashboard');
            console.log('2. V√° em SQL Editor');
            console.log('3. Execute: ALTER TABLE equipamentos DISABLE ROW LEVEL SECURITY;');
            console.log('4. Ou execute o script completo: fix_rls_equipamentos.sql');
        } else {
            console.log('‚úÖ Solu√ß√£o r√°pida funcionou! Equipamento criado:', data[0]);
        }
    } catch (error) {
        console.error('üí• Erro na solu√ß√£o r√°pida:', error);
    }
}

console.log('üß™ Scripts de diagn√≥stico carregados!');
console.log('üìã Comandos dispon√≠veis:');
console.log('- diagnosticarProblemaRLS() - Diagn√≥stico completo');
console.log('- testarRLS() - Verificar status do RLS');  
console.log('- solucionarRapida() - Tentar solu√ß√£o r√°pida');
console.log('\nüö® Se houver erro de RLS, execute fix_rls_equipamentos.sql no Supabase!');
